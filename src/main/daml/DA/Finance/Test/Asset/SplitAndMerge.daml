--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

daml 1.2
module DA.Finance.Test.Asset.SplitAndMerge where

import DA.Assert
import DA.Finance.Types
import DA.Finance.Asset.Fact
import DA.Finance.Asset.SplitAndMerge

test = scenario do
  party <- getParty "Alice"
  (assetCid, ruleCid) <- submit party do
    assetCid <- create AssetFact with
      assetId = AssetId {issuer = party; instrumentId = InstrumentId { label = "i"; version = 0}, version = 0}
      quantity = 10.0
      accountId = AccountId {provider = party; identifier = "a"; owner = party }
      observers = []
    ruleCid <- create AssetSplitAndMergeRule with
      provider = party
      owner = party
      observers = []

    -- split
    (splitCid1, splitCid2) <- exercise ruleCid AssetSplitAndMergeRule_Split with 
      assetFactCid = assetCid
      quantity = 6.5
    split1 <- fetch splitCid1
    split2 <- fetch splitCid2
    split1.quantity === 6.5
    split2.quantity === 3.5
    split1.assetId === split2.assetId
    split1.accountId === split2.accountId

    -- merge
    mergedCid <- exercise ruleCid AssetSplitAndMergeRule_Merge with 
      assetFactCid = splitCid1
      otherCid = splitCid2
    merged <- fetch mergedCid
    merged.quantity === 10.0
    return (mergedCid, ruleCid)

  submitMustFail party do
    exercise ruleCid AssetSplitAndMergeRule_Split with
      assetFactCid = assetCid
      quantity = 1111.1
