--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

daml 1.2 module DA.Finance.Test.Dvp.Settlement.Delegated where

import DA.Date
import DA.Time
import DA.Finance.Account.Fact
import DA.Finance.Asset.Fact
import DA.Finance.Asset.Transfer.Bilateral
import DA.Finance.Dvp.Fact
import DA.Finance.Dvp.Settlement.Delegated
import DA.Optional
import DA.Finance.Test.Dvp.Fact
import DA.Finance.Test.Dvp.Setup


-- setupDvp
-- A utility scenario function for registering a multi-leg trade
setupDvp
  (agent: Party)
  (actor1: Party)
  (actor2: Party)
  (observers: [Party])
  =
  scenario do
    -- Register Trade
    cid <- actor1 `submit` create DvpRuleRequest with agent; actor1; actor2; observers
    actor2 `submit` exercise cid DvpRuleRequest_Accept

-- settleTrade
-- A utility scenario function for settling a trade
allocateAndSettleDvp
  (agent: Party)
  (dvpFactCid: ContractId DvpFact)
  (dvpCid: ContractId DvpRule)
  (paymentTransferRuleCids: [(ContractId AssetTransferRule)])
  (paymentFactCids: [(ContractId AssetFact)])
  (deliveryTransferRuleCids: [(ContractId AssetTransferRule)])
  (deliveryFactCids: [(ContractId AssetFact)])
  (paymentTargetAccountFactCids: [(ContractId AccountFact)])
  (deliveryTargetAccountFactCids: [(ContractId AccountFact)])
  =
  scenario do
    dvpFact <- agent `submit` fetch dvpFactCid
    -- pass time to settlementDate
    nowTime <- getTime
    let nowDate = toDateUTC nowTime
        settlementDate = fromSome dvpFact.settlementDate
    if nowDate /= settlementDate then passToDate settlementDate else pass $ seconds $ 0
    -- allocate
    agent `submit`
      exercise dvpCid AllocateAndSettle with
        dvpFactCid
        paymentTransferRuleCids
        paymentFactCids
        paymentTargetAccountFactCids
        deliveryTransferRuleCids
        deliveryFactCids
        deliveryTargetAccountFactCids

dvpDelegation =
  scenario do
    -- ----------------- Setup -----------------
    s <- registerAccountsInstrumentsAssetsAndAssetLock

    -- ----------------- Allocate and settle trade -----------------
    dvpDelegationCid <- setupDvp s.agent s.acc1_1.accountId.owner s.acc2_2.accountId.owner []
    dvpFactCid <- registerDvpFact "dvpId1" s.acc1_1.accountId.owner s.acc2_2.accountId.owner (assetsToLegs [s.asset1_1, s.asset1_2]) (assetsToLegs [s.asset2_1, s.asset2_2]) s.settlementDate [s.agent]
    allocateAndSettleDvp
      s.agent
      dvpFactCid
      dvpDelegationCid
      [s.assetTransferCid1_1, s.assetTransferCid1_1]
      [s.assetCid1_1, s.assetCid1_2]
      [s.assetTransferCid2_2, s.assetTransferCid2_2]
      [s.assetCid2_1, s.assetCid2_2]
      [s.accountCid1_2, s.accountCid1_2]
      [s.accountCid2_1, s.accountCid2_1]
